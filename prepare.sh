#!/bin/bash

DIR_HOME=$(eval echo ~"$USER")
FILE_ZSH_RC="$DIR_HOME/.zshrc"
FILE_BASH_RC="$DIR_HOME/.bashrc"

FILE_RC=""
    
if test -e "$FILE_ZSH_RC"; then

  FILE_RC="$FILE_ZSH_RC"

else

    if test -e "$FILE_BASH_RC"; then

      FILE_RC="$FILE_BASH_RC"

    else

      echo "ERROR: No '$FILE_ZSH_RC' or '$FILE_BASH_RC' found on the system"
      exit 1
    fi
fi

if [ -z "$SUBMODULES_HOME" ]; then

  # shellcheck disable=SC2002
  if ! cat "$FILE_RC" | grep "SUBMODULES_HOME=" >/dev/null 2>&1; then

      export SUBMODULES_HOME="$DIR_HOME/Apps/Project-Toolkit"
      
      if echo "" >> "$FILE_RC" && echo "export SUBMODULES_HOME=$SUBMODULES_HOME" >> "$FILE_RC"; then

          echo "SUBMODULES_HOME is added into '$FILE_RC' configuration"

      else

          echo "WARNING: SUBMODULES_HOME was not added into '$FILE_RC' configuration"
      fi
  fi  
fi

# shellcheck disable=SC2012
FILES_COUNT=$(ls "$SUBMODULES_HOME" -1 | wc -l)

if [ "$FILES_COUNT" == 0 ]; then

  if (test -e ./clone || wget "https://raw.githubusercontent.com/red-elf/Project-Toolkit/main/clone?append="$(($(date +%s%N)/1000000)) -O clone) && \
    chmod +x ./clone && ./clone git@github.com:red-elf/Project-Toolkit.git /tmp; then

    echo "Project Toolkit is installed to '$SUBMODULES_HOME'"

  else

    echo "ERROR: Project Toolkit is not installed to '$SUBMODULES_HOME'"
    exit 1
  fi

else

  echo "Project Toolkit is available at '$SUBMODULES_HOME'"
fi

if [ -z "$SUBMODULES_HOME" ]; then

  echo "ERROR: The SUBMODULES_HOME is not defined"
  exit 1
fi

# shellcheck disable=SC2012
FILES_COUNT=$(ls "$SUBMODULES_HOME" -1 | wc -l)

if [ "$FILES_COUNT" == 0 ]; then

  echo "ERROR: The SUBMODULES_HOME points to empty directory"
  exit 1
fi

if test -e "$SUBMODULES_LOAD_ENVIRONMENT"; then

    echo "Loading the environment"
    
    # shellcheck disable=SC1090
    . "$SUBMODULES_LOAD_ENVIRONMENT" >/dev/null 2>&1
fi

DIR_MODULE_UPSTREAMABLE="$SUBMODULES_HOME/Upstreamable"

SCRIPT_PATHS="$SUBMODULES_HOME/Software-Toolkit/Utils/Sys/paths.sh"

if ! test  -e "$SCRIPT_PATHS"; then

    echo "ERROR: Prepare script not found '$SCRIPT_PATHS'"
    exit 1
fi

# shellcheck disable=SC1090
. "$SCRIPT_PATHS"

ADD_TO_PATH "$FILE_RC" "$DIR_MODULE_UPSTREAMABLE"

# shellcheck disable=SC1090
. "$FILE_RC"

if [ -n "$SUBMODULES_PRIVATE_HOME" ] && [ -n "$SUBMODULES_PRIVATE_RECIPES" ]; then
    
    SCRIPT_INSTALL_PRIVATE_MODULES="$SUBMODULES_HOME/Software-Toolkit/Utils/Git/install_private_submodules.sh"

    if ! test -e "$SCRIPT_INSTALL_PRIVATE_MODULES"; then

        echo "ERROR: Script not found '$SCRIPT_INSTALL_PRIVATE_MODULES'"
        exit 1
    fi

    if ! sh "$SCRIPT_INSTALL_PRIVATE_MODULES" "$SUBMODULES_PRIVATE_HOME" "$SUBMODULES_PRIVATE_RECIPES"; then

        echo "ERROR: Private modules installation failed"
        exit 1
    fi
fi

if [ -z "$1" ]; then

  echo "ERROR: Project path parameter not provided"
  exit 1
fi

PATH_PROJECT="$1"

if ! test -e "$PATH_PROJECT"; then

  echo "ERROR: Project at path does not exist '$PATH_PROJECT'"
  exit 1
fi

echo "Preparing project at: '$PATH_PROJECT'"

SCRIPT_PATHS="$SUBMODULES_HOME/Software-Toolkit/Utils/Sys/paths.sh"

if ! test  -e "$SCRIPT_PATHS"; then

    echo "ERROR: Prepare script not found '$SCRIPT_PATHS'"
    exit 1
fi

# shellcheck disable=SC1090
. "$SCRIPT_PATHS"

SCRIPT_LINK="$SUBMODULES_HOME/Software-Toolkit/Utils/Sys/Filesystem/link.sh"

if ! test -e "$SCRIPT_LINK"; then

  echo "ERROR: Script not found '$SCRIPT_LINK'"
  exit 1
fi

# shellcheck disable=SC1090
. "$SCRIPT_LINK"

DIR_RECIPES_ICONIC="Recipes/Iconic"
DIR_RECIPES_VSCODE="Recipes/VSCode"
DIR_RECIPES_PROJECT="Recipes/Project"
DIR_RECIPES_INSTALLABLE="Recipes/Installable"

DIR_RECIPES_ICONIC_FULL="$PATH_PROJECT/$DIR_RECIPES_ICONIC"
DIR_RECIPES_VSCODE_FULL="$PATH_PROJECT/$DIR_RECIPES_VSCODE"
DIR_RECIPES_PROJECT_FULL="$PATH_PROJECT/$DIR_RECIPES_PROJECT"
DIR_RECIPES_INSTALLABLE_FULL="$PATH_PROJECT/$DIR_RECIPES_INSTALLABLE"

DIR_RUN_TEST="Run/Test"
DIR_RUN_ICONIC="Run/Iconic"
DIR_RUN_PROJECT="Run/Project"

DIR_RUN_TEST_FULL="$PATH_PROJECT/$DIR_RUN_TEST"
DIR_RUN_ICONIC_FULL="$PATH_PROJECT/$DIR_RUN_ICONIC"
DIR_RUN_PROJECT_FULL="$PATH_PROJECT/$DIR_RUN_PROJECT"

INIT_DIR "$DIR_RUN_TEST_FULL"
INIT_DIR "$DIR_RUN_ICONIC_FULL"
INIT_DIR "$DIR_RUN_PROJECT_FULL"
INIT_DIR "$DIR_RECIPES_ICONIC_FULL"
INIT_DIR "$DIR_RECIPES_VSCODE_FULL"
INIT_DIR "$DIR_RECIPES_PROJECT_FULL"
INIT_DIR "$DIR_RECIPES_INSTALLABLE_FULL"

FILE_SYNC="sync"
FILE_TEST="test"
FILE_OPEN="open"
FILE_CLONE="clone"
FILE_PREPARE="prepare"
FILE_PULL_ALL="pull_all"
FILE_PUSH_ALL="push_all"

FILE_RUN_TEST_MAIN="main.sh"
FILE_RUN_PROJECT_OPEN="open.sh"
FILE_RUN_ICONIC_ICONIFY="iconify.sh"

FILE_RECIPES_PROJECT_PRE_OPEN="pre_open.sh"
FILE_RECIPES_PROJECT_PROJECT_PRE_OPEN="project_pre_open.sh"
FILE_RECIPES_ICONIC_LAUNCHER_PARAMS="launcher_parameters.sh"

FILE_RECIPES_VSCODE_DEFAULTS="defaults.sh"
FILE_RECIPES_VSCODE_SETTINGS="settings.json.sh"
FILE_RECIPES_VSCODE_INSTALLLATION_PARAMS="installation_parameters_vscode.sh"

FILE_RECIPES_INSTALLABLE_PREPARE="prepare.sh"

LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$FILE_SYNC" "$PATH_PROJECT/$FILE_SYNC"
LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$FILE_TEST" "$PATH_PROJECT/$FILE_TEST"
LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$FILE_OPEN" "$PATH_PROJECT/$FILE_OPEN"
LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$FILE_CLONE" "$PATH_PROJECT/$FILE_CLONE"
LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$FILE_PREPARE" "$PATH_PROJECT/$FILE_PREPARE"
LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$FILE_PULL_ALL" "$PATH_PROJECT/$FILE_PULL_ALL"
LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$FILE_PUSH_ALL" "$PATH_PROJECT/$FILE_PUSH_ALL"

LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$DIR_RECIPES_ICONIC/$FILE_RECIPES_ICONIC_LAUNCHER_PARAMS" \
  "$DIR_RECIPES_ICONIC_FULL/$FILE_RECIPES_ICONIC_LAUNCHER_PARAMS"

LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$DIR_RECIPES_PROJECT/$FILE_RECIPES_PROJECT_PRE_OPEN" \
  "$DIR_RECIPES_PROJECT_FULL/$FILE_RECIPES_PROJECT_PRE_OPEN"

LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$DIR_RECIPES_PROJECT/$FILE_RECIPES_PROJECT_PROJECT_PRE_OPEN" \
  "$DIR_RECIPES_PROJECT_FULL/$FILE_RECIPES_PROJECT_PROJECT_PRE_OPEN"

LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$DIR_RECIPES_VSCODE/$FILE_RECIPES_VSCODE_DEFAULTS" \
  "$DIR_RECIPES_VSCODE_FULL/$FILE_RECIPES_VSCODE_DEFAULTS"

LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$DIR_RECIPES_VSCODE/$FILE_RECIPES_VSCODE_SETTINGS" \
  "$DIR_RECIPES_VSCODE_FULL/$FILE_RECIPES_VSCODE_SETTINGS"

LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$DIR_RECIPES_VSCODE/$FILE_RECIPES_VSCODE_INSTALLLATION_PARAMS" \
  "$DIR_RECIPES_VSCODE_FULL/$FILE_RECIPES_VSCODE_INSTALLLATION_PARAMS"

LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$DIR_RECIPES_INSTALLABLE/$FILE_RECIPES_INSTALLABLE_PREPARE" \
  "$DIR_RECIPES_INSTALLABLE_FULL/$FILE_RECIPES_INSTALLABLE_PREPARE"

LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$DIR_RUN_TEST/$FILE_RUN_TEST_MAIN" \
  "$DIR_RUN_TEST_FULL/$FILE_RUN_TEST_MAIN"

LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$DIR_RUN_ICONIC/$FILE_RUN_ICONIC_ICONIFY" \
  "$DIR_RUN_ICONIC_FULL/$FILE_RUN_ICONIC_ICONIFY"

LINK_FILE_TO_DESTINATION "$SUBMODULES_HOME/$DIR_RUN_PROJECT/$FILE_RUN_PROJECT_OPEN" \
  "$DIR_RUN_PROJECT_FULL/$FILE_RUN_PROJECT_OPEN"